@page "/ranking"
@using BlazorRankingProject.Data.Services
@using BlazorRankingProject.Data.Models

@inject RankingService RankingService

<h3>Ranking</h3>

<AuthorizeView>
    <Authorized>
        @if (_gameResults == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>UserName</th>
                        <th>Score</th>
                        <th>Date</th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var gameResult in _gameResults)
                    {
                        <tr>
                            <td>@gameResult.UserName</td>
                            <td>@gameResult.Score</td>
                            <td>@gameResult.Date</td>
                            <td>
                                <button @onclick="() => UpdateGameResult(gameResult)">UpdateGameResult</button>
                            </td>
                            <td>
                                <button @onclick="() => DeleteGameResult(gameResult)">DeleteGameResult</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <p>
                <button @onclick="AddGameResult">AddGameResult</button>
            </p>

            @if (_showPopup)
            {
                <div class="modal" style="display:block" role="dialog">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h3 class="modal-title">Add/Update GR</h3>
                                <button type="button" class="close" @onclick="ClosePopup">
                                    <span area-hidden="true">X</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <label for="UserName">UserName</label>
                                <InputText class="form-control" placeholder="UserName" @bind-Value="_gameResult.UserName"/>
                                <label for="UserName">Score</label>
                                <InputNumber class="form-control" @bind-Value="_gameResult.Score"/>
                                <button @onclick="SaveGameResult">
                                    Save
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </Authorized>
    <NotAuthorized>
        <p>you not Author</p>
    </NotAuthorized>

</AuthorizeView>



@code {
    List<GameResult> _gameResults;

    bool _showPopup = false;
    GameResult _gameResult;

    protected override async Task OnInitializedAsync()
    {
        _gameResults = await RankingService.GetGameResultAsync();
    }

    void AddGameResult()
    {
        _showPopup = true;
        _gameResult = new GameResult() { Id = 0 };
    }

    void ClosePopup()
    {
        _showPopup = false;
    }

    async Task DeleteGameResult(GameResult gameResult)
    {
        RankingService.DeleteGameResult(gameResult);
        _gameResults = await RankingService.GetGameResultAsync();
    }

    async Task SaveGameResult()
    {
        if (_gameResult.Id == 0)  // 새로 만든
        {
            _gameResult.Date = DateTime.Now;
            var result = RankingService.AddGameResult(_gameResult);
        }
        else  // 수정하는 것
        {
            var result = RankingService.UpdateGameResult(_gameResult);
        }
        // 추가한 부분만 리스트 변경하는 것으로 최적화하는 것보다 현재 데이터를 싸그리 가져오는게 깔끔하다함
        // 오히려 로직이 꼬이는 부분이 많고 웹에서 그정도로 최적화할 필요는 없다함
        _gameResults = await RankingService.GetGameResultAsync();
        _showPopup = false;
    }

    void UpdateGameResult(GameResult gameResult)
    {
        _showPopup = true;
        _gameResult = gameResult;
    }

}
